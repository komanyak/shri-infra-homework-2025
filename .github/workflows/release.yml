name: Release
on: [workflow_dispatch]

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 18 }

      # Установка зависимостей и запуск проверок
      - run: npm ci
      - run: npm run lint
      - run: npm run test

      # Создание релизной ветки
      - name: Create release branch
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git checkout -b releases/${{ github.run_number }}
          git push origin releases/${{ github.run_number }}

      # Сборка и публикация Docker-образа
      - name: Build and push Docker
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            cr.yandex/${{ secrets.YC_REGISTRY_ID }}/app:${{ github.run_number }}
            cr.yandex/${{ secrets.YC_REGISTRY_ID }}/app:latest
          secrets: |
            {"auths":{"cr.yandex":{"username":"oauth2","password":"${{ secrets.YC_ACCESS_TOKEN }}"}}}

      # Создание git-тега
      - name: Create tag
        run: |
          git tag v${{ github.run_number }}
          git push origin v${{ github.run_number }}

      # Обновление CHANGELOG.md
      - name: Update CHANGELOG
        run: |
          echo "## v${{ github.run_number }}\n$(git log --pretty=format:'- %s' $(git describe --tags --abbrev=0)^..HEAD)" >> CHANGELOG.md
          git add CHANGELOG.md
          git commit -m "Update CHANGELOG for v${{ github.run_number }}"
          git push

      # Создание Issue в GitHub
      - name: Create GitHub Issue
        uses: actions/github-script@v6
        env:
          COMMITS_LIST: |
            $(git log --pretty=format:'- %s' $(git describe --tags --abbrev=0)^..HEAD)
        with:
          script: |
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Release v${{ github.run_number }}`,
              body: `### Release Details\n\n` +
                    `**Version:** ${{ github.run_number }}\n` +
                    `**Date:** ${new Date().toISOString()}\n` +
                    `**Docker Image:** cr.yandex/${{ secrets.YC_REGISTRY_ID }}/app:${{ github.run_number }}\n\n` +
                    `### Commits\n${process.env.COMMITS_LIST}`
            })
